{"version":3,"sources":["components/GitName.js","components/AddCategory.js","helpers/getGifs.js","components/GitGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/MianTitle.js","components/NavBar.js","GifExpertApp.js","index.js"],"names":["GitName","category","className","AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","elemt","preventDefault","trim","length","gifs","onSubmit","placeholder","type","value","onChange","target","icon","faSearch","getGifs","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","GitGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","MianTitle","NavBar","faGifts","href","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30d8bcba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const GitName = ({ category }) => {\r\n    return (\r\n        <>\r\n            <span className=\"card-name-gif\">\r\n                {category}\r\n            </span>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch }from '@fortawesome/free-solid-svg-icons';\r\nimport { Formik } from \"formik\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (elemt) =>{\r\n        setInputValue( elemt.target.value );\r\n    };\r\n\r\n    const handleSubmit = (elemt) =>{\r\n        elemt.preventDefault();//para prevenir el submit por defecto del nav. es decir por \"refresh\"\r\n        // console.log('Submit hecho')\r\n        //trim => para borrar espacios antes y despues del string\r\n        if(inputValue.trim().length >= 2){\r\n            setCategories( gifs => [inputValue, ...gifs]);\r\n            setInputValue('');//para que no haga doble posteo y en respuesta al dar intro devulve vacio\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <fieldset className=\"container-search\">\r\n                <Formik />\r\n                <input\r\n                placeholder=\"Search...\"\r\n                className=\"container-search-input\"\r\n                type=\"search\"\r\n                value= { inputValue }\r\n                onChange= { handleInputChange }\r\n                />\r\n                <button\r\n                type=\"submit\"\r\n                onSubmit= { handleSubmit }\r\n                className=\"container-search-btn\"><FontAwesomeIcon icon={ faSearch }/>\r\n                </button>\r\n            </fieldset>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired//en este caso a diferencia del \"string\" es una funsion por lo que usamos el termimo \".func\"\r\n}\r\n","\r\n\r\n\r\nexport const getGifs =async(category)=>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=wlYdvxa0YojRWR1U4iN54IqJ7MO5mr4Q`;//\"encodeURI()\"para evitar espacios y cosas que se nos escapa\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs =data.map(img =>{\r\n        return{\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n//regresa una promera que devuelve  o recolecta todo lo que esta en el primer return","import React from 'react'\r\n\r\nexport const GitGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__rubberBand\">\r\n            <div className=\"card-img\">\r\n                <img src={url} alt={title} />\r\n            </div>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GitGridItem } from './GitGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2  key={category}  className=\"name-search\">{ category }</h2>\r\n\r\n            {loading && <p className=\"loading-text animate__flash\">loading</p> }\r\n            {/* no usamos el \"?\" porque es una sola propiedad la que vamos a evaluar por eso usamos \"and\" para que sea extricto con el true o false */}\r\n\r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map( (img) =>(\r\n                <GitGridItem\r\n                key={img.id}\r\n                { ...img }\r\n                />\r\n                ) )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport  const useFetchGifs = ( category ) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs( category )\r\n        .then(imgs =>{\r\n            setTimeout(() => {\r\n                // console.log(imgs)\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n\r\n            }, 1000);\r\n        })\r\n\r\n    },[category])\r\n\r\n    return state; //{data: [], loading: true};\r\n}","import React from 'react'\r\n\r\nexport const MianTitle = () => {\r\n    return (\r\n        <div className=\"container-title\">\r\n            <h1>Explore a <span>World</span> full of <span>GIFS</span> </h1>\r\n            <p>I hope and you can find the <span>Gif</span> you're looking for</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGifts }from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <div className=\"container-nav\">\r\n            <picture className=\"container-nav-logo\">\r\n            <FontAwesomeIcon icon={ faGifts } className=\"container-nav-logo-icons\" />\r\n            </picture>\r\n            <section className=\"container-nav-opts\">\r\n                <a href=\"/\">About</a>\r\n                <a href=\"/\">Services</a>\r\n                <a href=\"/\">Contact Us</a>\r\n            </section>\r\n            <button className=\"contaner-nav-btn\">Sign In</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { GitName } from './components/GitName';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nimport { MianTitle } from './components/MianTitle';\r\nimport { NavBar } from './components/NavBar';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n\r\n    return (\r\n        <>\r\n            < NavBar />\r\n            <div className=\"wrapper-main\">\r\n            < MianTitle />\r\n            <AddCategory  setCategories={ setCategories }/>\r\n            <div className=\"separator\" ></div>\r\n            <ol className=\"list-name\">\r\n                {\r\n                categories.map( category =>(\r\n                    <GitName\r\n                    key={category}\r\n                    category={category}\r\n                />))\r\n                }\r\n            </ol>\r\n            <ol>\r\n                {\r\n                categories.map( category =>(\r\n                    <GifGrid\r\n                    key={ category }\r\n                    category={ category }\r\n                />))\r\n                }\r\n            </ol>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}